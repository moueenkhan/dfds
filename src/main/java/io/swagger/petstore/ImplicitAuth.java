/*
 * SwaggerPetstoreLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.swagger.petstore;

import io.swagger.petstore.models.OAuthScopeEnum;
import io.swagger.petstore.models.OAuthToken;
import java.util.List;
import java.util.Map;

/**
 * Interface for Implicit OAuth 2.
 */
public interface ImplicitAuth {

    /**
     * String value for oAuthClientId.
     * @return oAuthClientId
     */
    String getOAuthClientId();

    /**
     * String value for oAuthRedirectUri.
     * @return oAuthRedirectUri
     */
    String getOAuthRedirectUri();

    /**
     * OAuthToken value for oAuthToken.
     * @return oAuthToken
     */
    OAuthToken getOAuthToken();

    /**
     * List<OAuthScopeEnum> value for oAuthScopes.
     * @return oAuthScopes
     */
    List<OAuthScopeEnum> getOAuthScopes();

    /**
     * Checks if provided credentials matched with existing ones.
     * @param oAuthClientId String value for credentials.
     * @param oAuthRedirectUri String value for credentials.
     * @param oAuthToken OAuthToken value for credentials.
     * @param oAuthScopes List<OAuthScopeEnum> value for credentials.
     * @return true if credentials matched.
     */
    boolean equals(String oAuthClientId, String oAuthRedirectUri, OAuthToken oAuthToken,
            List<OAuthScopeEnum> oAuthScopes);

    /**
     * Build an authorization URL for taking the user's consent to access data.
     * @param state An opaque state string
     * @param additionalParameters Additional parameters to add the the authorization URL
     * @return Authorization URL
     */
    String buildAuthorizationUrl(final String state,
            final Map<String, String> additionalParameters);
    
    /**
     * Build an authorization URL for taking the user's consent to access data.
     * @return Authorization URL
     */
    String buildAuthorizationUrl();

    /**
     * Build an authorization URL for taking the user's consent to access data.
     * @param state An opaque state string
     * @return Authorization URL
     */
    String buildAuthorizationUrl(final String state);

    /**
     * Has the OAuth token expired?.
     * @return True if expired
     */
    boolean isTokenExpired();
}
